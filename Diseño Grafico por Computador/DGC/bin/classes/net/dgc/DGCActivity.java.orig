package net.dgc;



import android.app.Activity;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.Window;
import android.view.WindowManager;

public class DGCActivity extends Activity {
    Lienzo drawView;
	private float Proporcion = 50;
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        // Set full screen view
        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, 
                                         WindowManager.LayoutParams.FLAG_FULLSCREEN);
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        Figura Cubo = new Figura(
        		new float[]{-1, -1, 3,
        					-1, 1, 3,
        					 1, 1, 3,
        					 1, -1, 3,
        					-1, -1, 1,
        					-1, 1, 1,
        					 1, 1, 1,
        					 1, -1, 1 
        					 }, 
        		new int[]  {0, 1, 2,
        					2, 3, 0, 
        					3, 2, 6, 
        					6, 7, 3,
        					7, 6, 5, 
        					5, 4, 7, 
        					5, 1, 4,
        					1, 0, 4,
        					1, 2, 5,
        					5, 6, 2,
        					0, 3, 4,
        					4, 7, 3});
        Cubo.escalar(Proporcion);
        
        Figura Cilindro = new Figura(
        		new float[]{ 0, 2, 3,
        					 1, 1, 3,
        				     1,-1, 3,
        				     0,-2, 3},
        		new int[]{ 0, 1});
        Cilindro.revolucionar(10);
        Cilindro.escalar(Proporcion);
        
        drawView = new Lienzo(this);
        drawView.addFigura(Cilindro);
        setContentView(drawView);
        drawView.requestFocus();
    }
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        MenuInflater inflater = getMenuInflater();
        inflater.inflate(R.menu.menu, menu);
        return true;
    }
    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        switch (item.getItemId()) 
        {
        	// Activamos o desactivamos la traslacion con un dedo
        case R.id.tras_uno:
        		drawView.setTraslateValue(1);
            // Activamos o desactivamos la traslacion con dos dedos
        case R.id.tras_dos:
            	drawView.setTraslateValue(2);
        	break;
            // Activamos o desactivamos la rotacion
        case R.id.rot_uno:
        		drawView.setRotateValue(1);
            // Activamos o desactivamos la traslacion con dos dedos
        case R.id.rot_dos:
            	drawView.setRotateValue(2);
        	break;
            // Activamos o desactivamos el escalado
        case R.id.esc_uno:
        		drawView.setEscalateValue(1);
        	break;
        case R.id.esc_dos:
    			drawView.setEscalateValue(2);
        	// Selecciï¿½n de figura a trabajar
            // Cargamos la figura de un fichero
        case R.id.figura:
        	break;
            // Cargamos la figura de revolucion
        case R.id.revolucion:
        	break;
            // Cargamos la figura basica
        case R.id.basico:
        	break;
        	// Seleccion de los ejes en los que se trabajara
            // Escogemos los ejes X-Y
        case R.id.ejexy:
        		drawView.setAxisValue(0);
        	break;
            // Escogemos los ejes X-Z
        case R.id.ejexz:
    		drawView.setAxisValue(1);
        	break;
            // Activamos o desactivamos la traslacion
            // Escogemos los ejes Y-Z
        case R.id.ejeyz:
    		drawView.setAxisValue(2);
        	break;
        	// Seleccion de las opciones activas
            // Activamos o desactivamos el Z-buffer
        case R.id.zbuffer:
        	drawView.setZBufferValue(1);
        	break;
            // Activamos o desactivamos la perspectiva
        case R.id.perspectiva:
        	drawView.setPerspectiveValue(1);
        	break;
            // Activamos o desactivamos el relleno
        case R.id.relleno:
        	drawView.setFillValue(1);
        	break;
    	case R.id.proyeccion:
    		drawView.switchProjection();
    		break;
    	}
        return true;
    }
}
